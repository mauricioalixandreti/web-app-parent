#### Usando 2 appenders, 1 para logar no console, outro para um arquivo
log4j.rootCategory=INFO, stdout

# Imprime somente mensagens com 'priority' WARN ou mais alto para o logger
#lembrando a ordem: DEBUG - INFO - WARN - ERROR - FATAL
#log4j.category.SEU.LOGGER.NAME=DEBUG

# Explicita a heran\u00e7a do nivel de prioridade
log4j.category.your.category.name=INHERITED

#### O primeiro appender escreve no console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern que mostra o nome do arquivo e numero da linha.
log4j.appender.stdout.layout.ConversionPattern=[%d{dd MMM yyyy HH:mm:ss}] %p - %C{1} [line %L] - ip:%X{ip} - cnpj:%X{cnpj} - %m%n

#### O segundo appender escreve em um arquivo
log4j.appender.fileOut=org.apache.log4j.DailyRollingFileAppender
log4j.appender.fileOut.File=/var/local/logs/cambifacil/cambifacil.log
log4j.appender.fileOut.DatePattern='.'yyyy-MM-dd

# Controla o tamanho maximo do arquivo
#log4j.appender.fileOut.MaxFileSize=3MB

# Faz backup dos arquivos de log (apenas 1)
#log4j.appender.fileOut.MaxBackupIndex=1

log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout
log4j.appender.fileOut.layout.ConversionPattern=[%d{dd MMM yyyy HH:mm:ss}] %p - %c{1} - ip:%X{ip} - cnpj:%X{cnpj} - %m%n

#log4j.logger.org.hibernate=all, stdout
#log4j.logger.org.hibernate.SQL=trace
#log4j.logger.org.hibernate.type=trace
